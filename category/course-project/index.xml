<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>course project | Dveni</title>
    <link>https://dveni.github.io/category/course-project/</link>
      <atom:link href="https://dveni.github.io/category/course-project/index.xml" rel="self" type="application/rss+xml" />
    <description>course project</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 15 Jan 2021 20:21:21 +0100</lastBuildDate>
    <image>
      <url>https://dveni.github.io/images/icon_hua1e761c50709ce7914d01717f2e814d0_37876_512x512_fill_lanczos_center_2.png</url>
      <title>course project</title>
      <link>https://dveni.github.io/category/course-project/</link>
    </image>
    
    <item>
      <title>Application deployed on Openstack</title>
      <link>https://dveni.github.io/project/openstack/</link>
      <pubDate>Fri, 15 Jan 2021 20:21:21 +0100</pubDate>
      <guid>https://dveni.github.io/project/openstack/</guid>
      <description>&lt;h2 id=&#34;authors&#34;&gt;Authors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Raúl Torres García&lt;/li&gt;
&lt;li&gt;Daniel Vera Nieto&lt;/li&gt;
&lt;li&gt;Salomón Fereres Benzaquen&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;Development of scripts, templates and other configuration files needed to deploy automatically on an Openstack cloud using Heat orchestration services of a scalable application consisting of web servers, database, balancers and firewall.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Three web servers hosting the web application supporting the scalable service. scalable service.&lt;/li&gt;
&lt;li&gt;A database designed to store application data. Note: it is not necessary for the application to use the database, but it will be necessary to demonstrate that the database is accessible from the servers.&lt;/li&gt;
&lt;li&gt;An administration server that will be used for service management tasks and will be the only one accessible from the outside via SSH.&lt;/li&gt;
&lt;li&gt;A firewall that filters traffic from the outside (north-south) and only allows access to the web servers by the clients, as well as SSH traffic to the management server by the service administrators. administrators to the management server.&lt;/li&gt;
&lt;li&gt;A load balancer that distributes the traffic between the different web servers.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Dapp using Smart Contracts</title>
      <link>https://dveni.github.io/project/asignatura-smartcontract/</link>
      <pubDate>Sun, 10 Jan 2021 09:36:14 +0100</pubDate>
      <guid>https://dveni.github.io/project/asignatura-smartcontract/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;A distributed application that uses a Smart Contract deployed on Rinkeby Ethereum network. Built using React &amp;amp; TruffleSuite (truffle, drizzle, ganache, truffle-teams).&lt;/p&gt;
&lt;p&gt;The dapp has been deployed here: &lt;a href=&#34;https://dapp-asignatura.herokuapp.com/&#34;&gt;https://dapp-asignatura.herokuapp.com/&lt;/a&gt; (you&amp;rsquo;ll be prompted to login with Metamask).&lt;/p&gt;
&lt;p&gt;It uses the contract Asignatura (see 
&lt;a href=&#34;https://gist.github.com/dveni/c2cbfe62ae7476fa8f490e8f5924f980&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;), deployed on Rinkeby network: &lt;a href=&#34;https://rinkeby.etherscan.io/address/0xc3d22cd6fb0aab36bae82a8f99d2a5cfb22ee9e3&#34;&gt;https://rinkeby.etherscan.io/address/0xc3d22cd6fb0aab36bae82a8f99d2a5cfb22ee9e3&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Management of a course: create assignments and exams, grade students, etc.&lt;/li&gt;
&lt;li&gt;Automatic student auto-registration.&lt;/li&gt;
&lt;li&gt;Visualize students grades in each evaluation.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Distributed Hash Table</title>
      <link>https://dveni.github.io/project/dht/</link>
      <pubDate>Mon, 23 Nov 2020 20:17:44 +0100</pubDate>
      <guid>https://dveni.github.io/project/dht/</guid>
      <description>&lt;h2 id=&#34;authors&#34;&gt;Authors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Raúl Torres García&lt;/li&gt;
&lt;li&gt;Daniel Vera Nieto&lt;/li&gt;
&lt;li&gt;Salomón Fereres&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;Distributed application managing a Distributed Hash Table with a global table divided into partitions, storing each partition in different servers of the distributed application. Each server manages a partition of the global table, which holds a range of values in hash function space (the size of the range is the same for each node). The servers have information that relates the partition of the data to the IP address of the server that manages the corresponding table.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Availability, consistency and fault tolerance properties are based on Zookeeper.&lt;/li&gt;
&lt;li&gt;When a server is down, a new server is created to replace it and allow the application to continue to function. Updated tables are sent to the new server.&lt;/li&gt;
&lt;li&gt;An objectively ugly basic GUI.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crypto mining traffic identification</title>
      <link>https://dveni.github.io/project/crypto-traffic/</link>
      <pubDate>Mon, 01 Jul 2019 20:19:12 +0100</pubDate>
      <guid>https://dveni.github.io/project/crypto-traffic/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Internet trafﬁc classiﬁcation has become more important with the rapid growth of
crypto-currency use and crypto-mining tools, which have lead to the exposure to new threats
to end-users and companies. Most of existing approaches to perform this task use predeﬁned
features extracted by an expert in order to classify network trafﬁc. In contrast, in this study,
we propose a deep learning based approach, framed in a bigger research project named Deep
Augur, which aims to facilitate and speed up the characterisation of network ﬂows by means
of advanced Deep Neural Network techniques.
Our proposed scheme can detect the trafﬁc generated by an open-sourced crypto-miner, xmr-
stak, and a worm used for crypto-jacking, madominer, both of them used to mine Monero. The features that describe the captured
ﬂows are generated with Tstat tool. This features allow our model to detect when a trafﬁc ﬂow
belongs to crypto-mining trafﬁc. The model achieved a recall of nearly 100% and a precision
of about 98%.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quiz Application</title>
      <link>https://dveni.github.io/project/quiz/</link>
      <pubDate>Tue, 01 May 2018 20:20:56 +0100</pubDate>
      <guid>https://dveni.github.io/project/quiz/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;Web application to play quizzes created by the community. Built in Javascript using Nodejs as back-end and deployed in Heroku.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;User login system to create new quizzes&lt;/li&gt;
&lt;li&gt;Quizz creation forms&lt;/li&gt;
&lt;li&gt;Ranking of users&lt;/li&gt;
&lt;li&gt;Play random quizzes feature&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Pi Music Box</title>
      <link>https://dveni.github.io/project/pimusicbox/</link>
      <pubDate>Tue, 01 May 2018 20:20:33 +0100</pubDate>
      <guid>https://dveni.github.io/project/pimusicbox/</guid>
      <description>&lt;h2 id=&#34;authors&#34;&gt;Authors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Eduardo Quiroga&lt;/li&gt;
&lt;li&gt;Daniel Vera&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;This project consists of the design and implementation of a system that reproduces melodies based on a microcontroller, which in our case is a Raspberry Pi 3. The system must reproduce a melody associated with an RFID card when the card is inserted into the system, stopping the reproduction of the melody when the card is removed.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
